package com.lorfororl.listeners;

import com.lorfororl.LorForOrlPlugin;
import com.lorfororl.laboratory.Laboratory;
import com.lorfororl.research.AdvancedResearchManager;
import org.bukkit.ChatColor;
import org.bukkit.Location;
import org.bukkit.Material;
import org.bukkit.Sound;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.block.BlockPlaceEvent;
import org.bukkit.event.player.PlayerInteractEvent;
import org.bukkit.inventory.ItemStack;

import java.util.Set;

public class LaboratoryListener implements Listener {
    
    private final LorForOrlPlugin plugin;
    
    public LaboratoryListener(LorForOrlPlugin plugin) {
        this.plugin = plugin;
    }
    
    @EventHandler
    public void onBlockPlace(BlockPlaceEvent event) {
        ItemStack item = event.getItemInHand();
        Player player = event.getPlayer();
        
        if (!isLaboratoryItem(item)) return;
        
        String itemType = getLaboratoryItemType(item);
        
        if ("lab_core".equals(itemType)) {
            if (!plugin.getLaboratoryManager().isAuthorized(player)) {
                event.setCancelled(true);
                player.sendMessage(ChatColor.RED + "–£ –≤–∞—Å –Ω–µ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–∏!");
                return;
            }
            
            Location location = event.getBlock().getLocation();
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á–µ—Ä–µ–∑ –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É, —á—Ç–æ–±—ã –±–ª–æ–∫ —É—Å–ø–µ–ª —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å—Å—è
            plugin.getServer().getScheduler().runTaskLater(plugin, () -> {
                if (plugin.getLaboratoryManager().createLaboratory(player, location)) {
                    player.sendMessage(ChatColor.GREEN + "–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—è —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!");
                    player.playSound(location, Sound.BLOCK_BEACON_ACTIVATE, 1.0f, 1.0f);
                } else {
                    player.sendMessage(ChatColor.RED + "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–∏!");
                    player.sendMessage(ChatColor.YELLOW + "–¢—Ä–µ–±—É–µ—Ç—Å—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ 3x3x3:");
                    player.sendMessage(ChatColor.YELLOW + "–û—Å–Ω–æ–≤–∞–Ω–∏–µ: –∂–µ–ª–µ–∑–Ω—ã–µ –±–ª–æ–∫–∏");
                    player.sendMessage(ChatColor.YELLOW + "–¶–µ–Ω—Ç—Ä: –∞–ª–º–∞–∑–Ω—ã–π –±–ª–æ–∫");
                    player.sendMessage(ChatColor.YELLOW + "–£–≥–ª—ã 2 —É—Ä–æ–≤–Ω—è: —Ä–µ–¥—Å—Ç–æ—É–Ω –±–ª–æ–∫–∏");
                    player.sendMessage(ChatColor.YELLOW + "–í–µ—Ä—Ö: —Å—Ç–µ–∫–ª—è–Ω–Ω—ã–µ –±–ª–æ–∫–∏");
                }
            }, 1L);
        }
    }
    
    @EventHandler
    public void onPlayerInteract(PlayerInteractEvent event) {
        if (!event.getAction().name().contains("RIGHT_CLICK")) return;
        
        Player player = event.getPlayer();
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º —Ç–µ—Ä–º–∏–Ω–∞–ª–æ–º
        if (event.getClickedBlock() != null && event.getClickedBlock().getType() == Material.LECTERN) {
            Laboratory lab = plugin.getLaboratoryManager().getLaboratoryAt(event.getClickedBlock().getLocation());
            
            if (lab != null) {
                if (!plugin.getLaboratoryManager().isAuthorized(player)) {
                    player.sendMessage(ChatColor.RED + "–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–∏!");
                    event.setCancelled(true);
                    return;
                }
                
                plugin.getGuiManager().openLaboratoryGui(player);
                event.setCancelled(true);
            }
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å —è–¥—Ä–æ–º –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–∏
        if (event.getClickedBlock() != null && event.getClickedBlock().getType() == Material.DIAMOND_BLOCK) {
            Laboratory lab = plugin.getLaboratoryManager().getLaboratoryAt(event.getClickedBlock().getLocation());
            
            if (lab != null) {
                if (!plugin.getLaboratoryManager().isAuthorized(player)) {
                    player.sendMessage(ChatColor.RED + "–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–∏!");
                    event.setCancelled(true);
                    return;
                }
                
                plugin.getGuiManager().openLaboratoryGui(player);
                event.setCancelled(true);
            }
        }
    }
    
    // –ó–∞–≥–ª—É—à–∫–∏ –¥–ª—è –º–µ—Ç–æ–¥–æ–≤ LaboratoryItems
    private boolean isLaboratoryItem(ItemStack item) {
        if (item == null || item.getItemMeta() == null) return false;
        return item.getItemMeta().hasCustomModelData();
    }
    
    private String getLaboratoryItemType(ItemStack item) {
        if (item == null || item.getItemMeta() == null) return "";
        
        int modelData = item.getItemMeta().getCustomModelData();
        switch (modelData) {
            case 3001: return "lab_core";
            case 3002: return "research_terminal";
            default: return "";
        }
    }
    
    private void openResearchMenu(Player player, Laboratory lab) {
        AdvancedResearchManager researchManager = plugin.getAdvancedResearchManager();
        AdvancedResearchManager.ActiveAdvancedResearch activeResearch = researchManager.getActiveResearch(player);
        
        player.sendMessage("¬ßb" + "=".repeat(50));
        player.sendMessage("¬ß6‚öó ¬ßl–ò–°–°–õ–ï–î–û–í–ê–¢–ï–õ–¨–°–ö–ò–ô –¢–ï–†–ú–ò–ù–ê–õ ¬ß6‚öó");
        player.sendMessage("¬ßb" + "=".repeat(50));
        
        if (activeResearch != null) {
            AdvancedResearchManager.AdvancedResearch research = researchManager.getAvailableResearch().get(activeResearch.getResearchId());
            double progress = activeResearch.getProgress() * 100;
            long remainingMinutes = activeResearch.getRemainingTime() / (1000 * 60);
            long remainingHours = remainingMinutes / 60;
            long remainingDays = remainingHours / 24;
        
            player.sendMessage("¬ßeüî¨ –¢–µ–∫—É—â–µ–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ: " + research.getName());
            player.sendMessage("¬ßaüìä –ü—Ä–æ–≥—Ä–µ—Å—Å: " + String.format("%.2f%%", progress));
        
            if (remainingDays > 0) {
                player.sendMessage("¬ß7‚è∞ –û—Å—Ç–∞–ª–æ—Å—å: " + remainingDays + " –¥–Ω. " + (remainingHours % 24) + " —á. " + (remainingMinutes % 60) + " –º–∏–Ω.");
            } else if (remainingHours > 0) {
                player.sendMessage("¬ß7‚è∞ –û—Å—Ç–∞–ª–æ—Å—å: " + remainingHours + " —á. " + (remainingMinutes % 60) + " –º–∏–Ω.");
            } else {
                player.sendMessage("¬ß7‚è∞ –û—Å—Ç–∞–ª–æ—Å—å: " + remainingMinutes + " –º–∏–Ω.");
            }
        
            // –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä
            int barLength = 30;
            int filled = (int) (progress / 100 * barLength);
            StringBuilder bar = new StringBuilder("¬ßa");
            for (int i = 0; i < barLength; i++) {
                if (i < filled) {
                    bar.append("‚ñà");
                } else if (i == filled) {
                    bar.append("¬ße‚ñà¬ß7");
                } else {
                    bar.append("‚ñà");
                }
            }
            player.sendMessage("¬ß7[" + bar.toString() + "¬ß7]");
        
            if (activeResearch.isComplete()) {
                player.sendMessage("");
                player.sendMessage("¬ßa‚úÖ ¬ßl–ò–°–°–õ–ï–î–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!");
                player.sendMessage("¬ße–ù–∞–∂–º–∏—Ç–µ –µ—â–µ —Ä–∞–∑ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞.");
            }
        } else {
            player.sendMessage("¬ß7üìö –î–æ—Å—Ç—É–ø–Ω—ã–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è:");
            player.sendMessage("");
        
            for (AdvancedResearchManager.AdvancedResearch research : researchManager.getAvailableResearch().values()) {
                if (!researchManager.isResearchCompleted(player, research.getId())) {
                    player.sendMessage(research.getCategory().getDisplayName() + " " + research.getName());
                    player.sendMessage("¬ß7‚îî‚îÄ " + research.getDescription());
                    player.sendMessage("¬ß7‚îî‚îÄ ‚è∞ –í—Ä–µ–º—è: " + formatResearchTime(research.getResearchTimeMinutes()));
                    player.sendMessage("¬ß7‚îî‚îÄ üìã –ö–æ–º–∞–Ω–¥–∞: ¬ße/lorfororl research start " + research.getId());
                    player.sendMessage("");
                }
            }
        
            Set<String> completed = researchManager.getCompletedResearch(player);
            if (!completed.isEmpty()) {
                player.sendMessage("¬ßa‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è: " + completed.size());
            }
        }
        
        player.sendMessage("¬ßb" + "=".repeat(50));
    }

    private String formatResearchTime(long minutes) {
        long hours = minutes / 60;
        long days = hours / 24;

        if (days > 0) {
            return String.format("%d –¥–Ω. %d —á.", days, hours % 24);
        } else if (hours > 0) {
            return String.format("%d —á.", hours);
        } else {
            return String.format("%d –º–∏–Ω.", minutes);
        }
    }
    
    private void showLaboratoryStatus(Player player, Laboratory lab) {
        player.sendMessage(ChatColor.GREEN + "=== –°—Ç–∞—Ç—É—Å –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–∏ ===");
        player.sendMessage(ChatColor.WHITE + "–°–æ—Å—Ç–æ—è–Ω–∏–µ: " + (lab.isActive() ? ChatColor.GREEN + "–ê–ö–¢–ò–í–ù–ê" : ChatColor.RED + "–ù–ï–ê–ö–¢–ò–í–ù–ê"));
        
        if (lab.getCurrentResearch() != null) {
            player.sendMessage(ChatColor.YELLOW + "–¢–µ–∫—É—â–µ–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ: " + lab.getCurrentResearch());
        } else {
            player.sendMessage(ChatColor.GRAY + "–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –Ω–µ –ø—Ä–æ–≤–æ–¥—è—Ç—Å—è");
        }
        
        player.sendMessage(ChatColor.GRAY + "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π —Ç–µ—Ä–º–∏–Ω–∞–ª –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è");
    }
    
    private void giveResearchResult(Player player, String researchId) {
        ItemStack result = null;
        
        switch (researchId) {
            case "hazmat_suit":
                result = createHazmatSuit();
                break;
            case "power_armor":
                result = createPowerArmor();
                break;
            case "railgun":
                result = createRailgun();
                break;
            case "nuclear_reactor":
                // –í—ã–¥–∞–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –¥–ª—è —Ä–µ–∞–∫—Ç–æ—Ä–∞
                player.getInventory().addItem(new ItemStack(Material.BEACON, 1)); // –Ø–¥—Ä–æ —Ä–µ–∞–∫—Ç–æ—Ä–∞
                player.sendMessage(ChatColor.GREEN + "–ü–æ–ª—É—á–µ–Ω—ã —á–µ—Ä—Ç–µ–∂–∏ —è–¥–µ—Ä–Ω–æ–≥–æ —Ä–µ–∞–∫—Ç–æ—Ä–∞!");
                return;
            case "electric_vehicle":
                player.getInventory().addItem(new ItemStack(Material.MINECART, 1)); // –≠–ª–µ–∫—Ç—Ä–æ–∫–∞—Ä
                player.sendMessage(ChatColor.GREEN + "–ü–æ–ª—É—á–µ–Ω —ç–ª–µ–∫—Ç—Ä–æ—Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç!");
                return;
            case "auto_miner":
                player.getInventory().addItem(new ItemStack(Material.DISPENSER, 1)); // –ê–≤—Ç–æ—à–∞—Ö—Ç–µ—Ä
                player.sendMessage(ChatColor.GREEN + "–ü–æ–ª—É—á–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —à–∞—Ö—Ç–µ—Ä!");
                return;
        }
        
        if (result != null) {
            player.getInventory().addItem(result);
            player.sendMessage(ChatColor.GREEN + "–ü–æ–ª—É—á–µ–Ω —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è!");
        }
    }
    
    // –ó–∞–≥–ª—É—à–∫–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–µ–¥–º–µ—Ç–æ–≤
    private ItemStack createHazmatSuit() {
        ItemStack item = new ItemStack(Material.LEATHER_CHESTPLATE);
        item.getItemMeta().setDisplayName("¬ße–ö–æ—Å—Ç—é–º —Ö–∏–º–∑–∞—â–∏—Ç—ã");
        item.getItemMeta().setCustomModelData(2003);
        item.setItemMeta(item.getItemMeta());
        return item;
    }
    
    private ItemStack createPowerArmor() {
        ItemStack item = new ItemStack(Material.NETHERITE_CHESTPLATE);
        item.getItemMeta().setDisplayName("¬ßb–°–∏–ª–æ–≤–∞—è –±—Ä–æ–Ω—è");
        item.getItemMeta().setCustomModelData(2004);
        item.setItemMeta(item.getItemMeta());
        return item;
    }
    
    private ItemStack createRailgun() {
        ItemStack item = new ItemStack(Material.CROSSBOW);
        item.getItemMeta().setDisplayName("¬ßc–†–µ–ª—å—Å–æ—Ç—Ä–æ–Ω");
        item.getItemMeta().setCustomModelData(2005);
        item.setItemMeta(item.getItemMeta());
        return item;
    }
}
